{"version":3,"sources":["../node_modules/three/examples/jsm/controls/OrbitControls.js","../node_modules/three/examples/jsm/loaders/RGBELoader.js"],"names":["_changeEvent","type","_startEvent","_endEvent","OrbitControls","EventDispatcher","constructor","object","domElement","super","undefined","console","warn","document","error","this","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","handleMouseWheel","needsUpdate","code","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","passive","RGBELoader","DataTextureLoader","manager","UnsignedByteType","parse","buffer","rgbe_error","rgbe_error_code","msg","fgets","lineLimit","consume","p","pos","i","len","s","chunk","String","fromCharCode","apply","Uint16Array","subarray","indexOf","byteLength","slice","RGBEByteToRGBFloat","sourceArray","sourceOffset","destArray","destOffset","e","RGBEByteToRGBHalf","DataUtils","toHalfFloat","byteArray","Uint8Array","rgbe_header_info","gamma_re","exposure_re","format_re","dimensions_re","header","valid","string","comments","programtype","format","gamma","exposure","width","height","line","match","charAt","parseFloat","parseInt","RGBE_ReadHeader","w","h","image_rgba_data","scanline_width","data_rgba","ptr_end","rgbeStart","scanline_buffer","num_scanlines","count","ptr","isEncodedRun","byteValue","l","off","RGBE_ReadPixels_RLE","data","numElements","RGBEFormat","FloatType","floatArray","Float32Array","j","RGBFormat","HalfFloatType","halfArray","setDataType","value","load","url","onLoad","onProgress","onError","texture","texData","encoding","RGBEEncoding","minFilter","NearestFilter","magFilter","generateMipmaps","flipY","LinearEncoding","LinearFilter"],"mappings":"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","file":"static/js/17.278cc215.chunk.js","sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart );\n\t\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd );\n\t\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove );\n\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\tconst dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tconst dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tconst dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseDown( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseMove( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseUp( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\t// Prevent the browser from scrolling.\n\t\t\tevent.preventDefault();\n\n\t\t\t// Manually set the focus since calling preventDefault above\n\t\t\t// prevents the browser from setting it automatically.\n\n\t\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseUp( event ) {\n\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleMouseUp( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault(); // prevent scrolling\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault(); // prevent scrolling\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchEnd( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleTouchEnd( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\tscope.domElement.addEventListener( 'touchstart', onTouchStart, { passive: false } );\n\t\tscope.domElement.addEventListener( 'touchend', onTouchEnd );\n\t\tscope.domElement.addEventListener( 'touchmove', onTouchMove, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n","import {\n\tDataTextureLoader,\n\tDataUtils,\n\tFloatType,\n\tHalfFloatType,\n\tLinearEncoding,\n\tLinearFilter,\n\tNearestFilter,\n\tRGBEEncoding,\n\tRGBEFormat,\n\tRGBFormat,\n\tUnsignedByteType\n} from 'three';\n\n// https://github.com/mrdoob/three.js/issues/5552\n// http://en.wikipedia.org/wiki/RGBE_image_format\n\nclass RGBELoader extends DataTextureLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.type = UnsignedByteType;\n\n\t}\n\n\t// adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n\n\tparse( buffer ) {\n\n\t\tconst\n\t\t\t/* return codes for rgbe routines */\n\t\t\t//RGBE_RETURN_SUCCESS = 0,\n\t\t\tRGBE_RETURN_FAILURE = - 1,\n\n\t\t\t/* default error routine.  change this to change error handling */\n\t\t\trgbe_read_error = 1,\n\t\t\trgbe_write_error = 2,\n\t\t\trgbe_format_error = 3,\n\t\t\trgbe_memory_error = 4,\n\t\t\trgbe_error = function ( rgbe_error_code, msg ) {\n\n\t\t\t\tswitch ( rgbe_error_code ) {\n\n\t\t\t\t\tcase rgbe_read_error: console.error( 'THREE.RGBELoader Read Error: ' + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgbe_write_error: console.error( 'THREE.RGBELoader Write Error: ' + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgbe_format_error: console.error( 'THREE.RGBELoader Bad File Format: ' + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase rgbe_memory_error: console.error( 'THREE.RGBELoader: Error: ' + ( msg || '' ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn RGBE_RETURN_FAILURE;\n\n\t\t\t},\n\n\t\t\t/* offsets to red, green, and blue components in a data (float) pixel */\n\t\t\t//RGBE_DATA_RED = 0,\n\t\t\t//RGBE_DATA_GREEN = 1,\n\t\t\t//RGBE_DATA_BLUE = 2,\n\n\t\t\t/* number of floats per pixel, use 4 since stored in rgba image format */\n\t\t\t//RGBE_DATA_SIZE = 4,\n\n\t\t\t/* flags indicating which fields in an rgbe_header_info are valid */\n\t\t\tRGBE_VALID_PROGRAMTYPE = 1,\n\t\t\tRGBE_VALID_FORMAT = 2,\n\t\t\tRGBE_VALID_DIMENSIONS = 4,\n\n\t\t\tNEWLINE = '\\n',\n\n\t\t\tfgets = function ( buffer, lineLimit, consume ) {\n\n\t\t\t\tconst chunkSize = 128;\n\n\t\t\t\tlineLimit = ! lineLimit ? 1024 : lineLimit;\n\t\t\t\tlet p = buffer.pos,\n\t\t\t\t\ti = - 1, len = 0, s = '',\n\t\t\t\t\tchunk = String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\twhile ( ( 0 > ( i = chunk.indexOf( NEWLINE ) ) ) && ( len < lineLimit ) && ( p < buffer.byteLength ) ) {\n\n\t\t\t\t\ts += chunk; len += chunk.length;\n\t\t\t\t\tp += chunkSize;\n\t\t\t\t\tchunk += String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( - 1 < i ) {\n\n\t\t\t\t\t/*for (i=l-1; i>=0; i--) {\n\t\t\t\t\t\tbyteCode = m.charCodeAt(i);\n\t\t\t\t\t\tif (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n\t\t\t\t\t\telse if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n\t\t\t\t\t\tif (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n\t\t\t\t\t}*/\n\t\t\t\t\tif ( false !== consume ) buffer.pos += len + i + 1;\n\t\t\t\t\treturn s + chunk.slice( 0, i );\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\t/* minimal header reading.  modify if you want to parse more information */\n\t\t\tRGBE_ReadHeader = function ( buffer ) {\n\n\n\t\t\t\t// regexes to parse header info fields\n\t\t\t\tconst magic_token_re = /^#\\?(\\S+)/,\n\t\t\t\t\tgamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\texposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\tformat_re = /^\\s*FORMAT=(\\S+)\\s*$/,\n\t\t\t\t\tdimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/,\n\n\t\t\t\t\t// RGBE format header struct\n\t\t\t\t\theader = {\n\n\t\t\t\t\t\tvalid: 0, /* indicate which fields are valid */\n\n\t\t\t\t\t\tstring: '', /* the actual header string */\n\n\t\t\t\t\t\tcomments: '', /* comments found in header */\n\n\t\t\t\t\t\tprogramtype: 'RGBE', /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */\n\n\t\t\t\t\t\tformat: '', /* RGBE format, default 32-bit_rle_rgbe */\n\n\t\t\t\t\t\tgamma: 1.0, /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */\n\n\t\t\t\t\t\texposure: 1.0, /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */\n\n\t\t\t\t\t\twidth: 0, height: 0 /* image dimensions, width/height */\n\n\t\t\t\t\t};\n\n\t\t\t\tlet line, match;\n\n\t\t\t\tif ( buffer.pos >= buffer.byteLength || ! ( line = fgets( buffer ) ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_read_error, 'no header found' );\n\n\t\t\t\t}\n\n\t\t\t\t/* if you want to require the magic token then uncomment the next line */\n\t\t\t\tif ( ! ( match = line.match( magic_token_re ) ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'bad initial token' );\n\n\t\t\t\t}\n\n\t\t\t\theader.valid |= RGBE_VALID_PROGRAMTYPE;\n\t\t\t\theader.programtype = match[ 1 ];\n\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\twhile ( true ) {\n\n\t\t\t\t\tline = fgets( buffer );\n\t\t\t\t\tif ( false === line ) break;\n\t\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\t\tif ( '#' === line.charAt( 0 ) ) {\n\n\t\t\t\t\t\theader.comments += line + '\\n';\n\t\t\t\t\t\tcontinue; // comment line\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( gamma_re ) ) {\n\n\t\t\t\t\t\theader.gamma = parseFloat( match[ 1 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( exposure_re ) ) {\n\n\t\t\t\t\t\theader.exposure = parseFloat( match[ 1 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( format_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_FORMAT;\n\t\t\t\t\t\theader.format = match[ 1 ];//'32-bit_rle_rgbe';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( dimensions_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_DIMENSIONS;\n\t\t\t\t\t\theader.height = parseInt( match[ 1 ], 10 );\n\t\t\t\t\t\theader.width = parseInt( match[ 2 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( header.valid & RGBE_VALID_FORMAT ) && ( header.valid & RGBE_VALID_DIMENSIONS ) ) break;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_FORMAT ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'missing format specifier' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_DIMENSIONS ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'missing image size specifier' );\n\n\t\t\t\t}\n\n\t\t\t\treturn header;\n\n\t\t\t},\n\n\t\t\tRGBE_ReadPixels_RLE = function ( buffer, w, h ) {\n\n\t\t\t\tconst scanline_width = w;\n\n\t\t\t\tif (\n\t\t\t\t\t// run length encoding is not allowed so read flat\n\t\t\t\t\t( ( scanline_width < 8 ) || ( scanline_width > 0x7fff ) ) ||\n\t\t\t\t\t// this file is not run length encoded\n\t\t\t\t\t( ( 2 !== buffer[ 0 ] ) || ( 2 !== buffer[ 1 ] ) || ( buffer[ 2 ] & 0x80 ) )\n\t\t\t\t) {\n\n\t\t\t\t\t// return the flat buffer\n\t\t\t\t\treturn new Uint8Array( buffer );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scanline_width !== ( ( buffer[ 2 ] << 8 ) | buffer[ 3 ] ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'wrong scanline width' );\n\n\t\t\t\t}\n\n\t\t\t\tconst data_rgba = new Uint8Array( 4 * w * h );\n\n\t\t\t\tif ( ! data_rgba.length ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_memory_error, 'unable to allocate buffer space' );\n\n\t\t\t\t}\n\n\t\t\t\tlet offset = 0, pos = 0;\n\n\t\t\t\tconst ptr_end = 4 * scanline_width;\n\t\t\t\tconst rgbeStart = new Uint8Array( 4 );\n\t\t\t\tconst scanline_buffer = new Uint8Array( ptr_end );\n\t\t\t\tlet num_scanlines = h;\n\n\t\t\t\t// read in each successive scanline\n\t\t\t\twhile ( ( num_scanlines > 0 ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\tif ( pos + 4 > buffer.byteLength ) {\n\n\t\t\t\t\t\treturn rgbe_error( rgbe_read_error );\n\n\t\t\t\t\t}\n\n\t\t\t\t\trgbeStart[ 0 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 1 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 2 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 3 ] = buffer[ pos ++ ];\n\n\t\t\t\t\tif ( ( 2 != rgbeStart[ 0 ] ) || ( 2 != rgbeStart[ 1 ] ) || ( ( ( rgbeStart[ 2 ] << 8 ) | rgbeStart[ 3 ] ) != scanline_width ) ) {\n\n\t\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'bad rgbe scanline format' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// read each of the four channels for the scanline into the buffer\n\t\t\t\t\t// first red, then green, then blue, then exponent\n\t\t\t\t\tlet ptr = 0, count;\n\n\t\t\t\t\twhile ( ( ptr < ptr_end ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\t\tcount = buffer[ pos ++ ];\n\t\t\t\t\t\tconst isEncodedRun = count > 128;\n\t\t\t\t\t\tif ( isEncodedRun ) count -= 128;\n\n\t\t\t\t\t\tif ( ( 0 === count ) || ( ptr + count > ptr_end ) ) {\n\n\t\t\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'bad scanline data' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isEncodedRun ) {\n\n\t\t\t\t\t\t\t// a (encoded) run of the same value\n\t\t\t\t\t\t\tconst byteValue = buffer[ pos ++ ];\n\t\t\t\t\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\tscanline_buffer[ ptr ++ ] = byteValue;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//ptr += count;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// a literal-run\n\t\t\t\t\t\t\tscanline_buffer.set( buffer.subarray( pos, pos + count ), ptr );\n\t\t\t\t\t\t\tptr += count; pos += count;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// now convert data from buffer into rgba\n\t\t\t\t\t// first red, then green, then blue, then exponent (alpha)\n\t\t\t\t\tconst l = scanline_width; //scanline_buffer.byteLength;\n\t\t\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\t\t\tlet off = 0;\n\t\t\t\t\t\tdata_rgba[ offset ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 1 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 2 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 3 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnum_scanlines --;\n\n\t\t\t\t}\n\n\t\t\t\treturn data_rgba;\n\n\t\t\t};\n\n\t\tconst RGBEByteToRGBFloat = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = sourceArray[ sourceOffset + 0 ] * scale;\n\t\t\tdestArray[ destOffset + 1 ] = sourceArray[ sourceOffset + 1 ] * scale;\n\t\t\tdestArray[ destOffset + 2 ] = sourceArray[ sourceOffset + 2 ] * scale;\n\n\t\t};\n\n\t\tconst RGBEByteToRGBHalf = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = DataUtils.toHalfFloat( sourceArray[ sourceOffset + 0 ] * scale );\n\t\t\tdestArray[ destOffset + 1 ] = DataUtils.toHalfFloat( sourceArray[ sourceOffset + 1 ] * scale );\n\t\t\tdestArray[ destOffset + 2 ] = DataUtils.toHalfFloat( sourceArray[ sourceOffset + 2 ] * scale );\n\n\t\t};\n\n\t\tconst byteArray = new Uint8Array( buffer );\n\t\tbyteArray.pos = 0;\n\t\tconst rgbe_header_info = RGBE_ReadHeader( byteArray );\n\n\t\tif ( RGBE_RETURN_FAILURE !== rgbe_header_info ) {\n\n\t\t\tconst w = rgbe_header_info.width,\n\t\t\t\th = rgbe_header_info.height,\n\t\t\t\timage_rgba_data = RGBE_ReadPixels_RLE( byteArray.subarray( byteArray.pos ), w, h );\n\n\t\t\tif ( RGBE_RETURN_FAILURE !== image_rgba_data ) {\n\n\t\t\t\tlet data, format, type;\n\t\t\t\tlet numElements;\n\n\t\t\t\tswitch ( this.type ) {\n\n\t\t\t\t\tcase UnsignedByteType:\n\n\t\t\t\t\t\tdata = image_rgba_data;\n\t\t\t\t\t\tformat = RGBEFormat; // handled as THREE.RGBAFormat in shaders\n\t\t\t\t\t\ttype = UnsignedByteType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase FloatType:\n\n\t\t\t\t\t\tnumElements = ( image_rgba_data.length / 4 ) * 3;\n\t\t\t\t\t\tconst floatArray = new Float32Array( numElements );\n\n\t\t\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\t\t\tRGBEByteToRGBFloat( image_rgba_data, j * 4, floatArray, j * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata = floatArray;\n\t\t\t\t\t\tformat = RGBFormat;\n\t\t\t\t\t\ttype = FloatType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\t\tnumElements = ( image_rgba_data.length / 4 ) * 3;\n\t\t\t\t\t\tconst halfArray = new Uint16Array( numElements );\n\n\t\t\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\t\t\tRGBEByteToRGBHalf( image_rgba_data, j * 4, halfArray, j * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata = halfArray;\n\t\t\t\t\t\tformat = RGBFormat;\n\t\t\t\t\t\ttype = HalfFloatType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.error( 'THREE.RGBELoader: unsupported type: ', this.type );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\twidth: w, height: h,\n\t\t\t\t\tdata: data,\n\t\t\t\t\theader: rgbe_header_info.string,\n\t\t\t\t\tgamma: rgbe_header_info.gamma,\n\t\t\t\t\texposure: rgbe_header_info.exposure,\n\t\t\t\t\tformat: format,\n\t\t\t\t\ttype: type\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tsetDataType( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase UnsignedByteType:\n\n\t\t\t\t\ttexture.encoding = RGBEEncoding;\n\t\t\t\t\ttexture.minFilter = NearestFilter;\n\t\t\t\t\ttexture.magFilter = NearestFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase FloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn super.load( url, onLoadCallback, onProgress, onError );\n\n\t}\n\n}\n\nexport { RGBELoader };\n"],"sourceRoot":""}